# Display the decimal values of a binary number encoded using 2 m4 controllers
# The 9 digit for tens place and ones is shown on the 3 and 7 LEDs respectively on the g8 expander
# Display does not work on values > 99

[m4]

[faderbank]
    notches = 2
    output1 = _F1_1
    output2 = _F1_2
    output3 = _F1_3
    output4 = _F1_4
    output5 = _F1_5
    output6 = _F1_6
    output7 = _F1_7
    output8 = _F1_8

[mixer]
    input1 = _F1_1 * 128
    input2 = _F1_2 * 64
    input3 = _F1_3 * 32
    input4 = _F1_4 * 16
    input5 = _F1_5 * 8
    input6 = _F1_6 * 4
    input7 = _F1_7 * 2
    input8 = _F1_8 * 1
    output = _MIXOUT

[math]
    input1 = _MIXOUT
    input2 = 10
    modulo = _ONE_DIG

[math]
    input1 = _MIXOUT
    input2 = 10
    quotient = _QUO

[math]
    input1 = _QUO
    floor = _TEN_DIG

#TENS
[compare]
    input = _TEN_DIG
    compare = 1
    ifequal = 1
    else = 0
    output = R1

[compare]
    input = _TEN_DIG
    compare = 2
    ifequal = 1
    else = 0
    output = R2

[compare]
    input = _TEN_DIG
    compare = 3
    ifequal = 1
    else = 0
    output = R3

[compare]
    input = _TEN_DIG
    compare = 4
    ifequal = 1
    else = 0
    output = R4

[compare]
    input = _TEN_DIG
    compare = 5
    ifequal = 1
    else = 0
    output = R5

[compare]
    input = _TEN_DIG
    compare = 6
    ifequal = 1
    else = 0
    output = R6

[compare]
    input = _TEN_DIG
    compare = 7
    ifequal = 1
    else = 0
    output = R7

[compare]
    input = _TEN_DIG
    compare = 8
    ifequal = 1
    else = 0
    output = R8

[compare]
    input = _TEN_DIG
    compare = 9
    ifequal = 1
    else = 0
    output = R19

#ONES
[compare]
    input = _ONE_DIG
    compare = 1
    ifequal = 1
    else = 0
    output = R9

[compare]
    input = _ONE_DIG
    compare = 2
    ifequal = 1
    else = 0
    output = R10

[compare]
    input = _ONE_DIG
    compare = 3
    ifequal = 1
    else = 0
    output = R11

[compare]
    input = _ONE_DIG
    compare = 4
    ifequal = 1
    else = 0
    output = R12

[compare]
    input = _ONE_DIG
    compare = 5
    ifequal = 1
    else = 0
    output = R13

[compare]
    input = _ONE_DIG
    compare = 6
    ifequal = 1
    else = 0
    output = R14

[compare]
    input = _ONE_DIG
    compare = 7
    ifequal = 1
    else = 0
    output = R15

[compare]
    input = _ONE_DIG
    compare = 8
    ifequal = 1
    else = 0
    output = R16

[compare]
    input = _ONE_DIG
    compare = 9
    ifequal = 1
    else = 0
    output = R23